/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public List<String> binaryTreePaths(TreeNode root) {
        List<String>  list= new ArrayList<String>();
        String str="";
        Path(root,list,str);
        return list;
    }
    public static boolean Path(TreeNode node,List<String> list,String str){
        if(node == null){
            return true;
        }
        if(str == ""){
            str+=node.val;
        }else{
            str+=("->"+node.val);
        }
        if(node.left==null && node.right==null){
            list.add(str);
            str="";
        }
        Path(node.left,list,str);
        Path(node.right,list,str);
        return true;
    }
}
